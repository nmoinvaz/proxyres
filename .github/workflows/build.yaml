name: Build
on: [workflow_dispatch, push, pull_request]
env:
  TERM: xterm-256color

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Build - macOS Xcode
            runs-on: macos-latest
            compiler: clang
            cxx-compiler: clang++
            cmake-args: -G Xcode

          - name: Build - Ubuntu Clang
            runs-on: ubuntu-latest
            compiler: clang
            cxx-compiler: clang++
            cmake-args: -G Ninja

          - name: Build - Windows Win32
            runs-on: windows-latest
            compiler: cl
            cmake-args: -A Win32

          - name: Build - Windows Win64
            runs-on: windows-latest
            compiler: cl

    steps:
    - name: Install packages (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install -y ninja-build libgconf2-dev libjavascriptcoregtk-4.0-dev

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Generate project
      run: cmake -S . -B build ${{ matrix.cmake-args }} -D CMAKE_BUILD_TYPE=Release -D BUILD_SHARED_LIBS=OFF
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.cxx-compiler }}

    - name: Build project
      run: cmake --build build --config Release

    - name: Dump proxy info (Ubuntu)
      if: runner.os == 'Linux'
      run: env | grep -i proxy

    - name: Dump proxy info (macOS)
      if: runner.os == 'macOS'
      run: scutil --proxy

    - name: Dump proxy info (Windows)
      if: runner.os == 'Windows'
      run: netsh winhttp dump

    - name: Run tests
      run: ctest --verbose -C Release
      working-directory: build