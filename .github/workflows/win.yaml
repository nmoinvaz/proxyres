name: Build - Windows
on: [workflow_dispatch, push, pull_request]
env:
  TERM: xterm-256color

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Build - Windows Win32
            runs-on: windows-latest
            cmake-args: -A Win32

          - name: Build - Windows Win64
            runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Generate project
      run: cmake -S . -B build ${{ matrix.cmake-args }} -D CMAKE_BUILD_TYPE=Release -D BUILD_SHARED_LIBS=OFF

    - name: Build project
      run: cmake --build build --config Release

    - name: Run tests
      run: ctest --verbose -C Release
      working-directory: build

    - name: Dump proxy info
      run: netsh winhttp show proxy

    - name: Set IE proxy settings
      run: |
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings" /v AutoDetect /t REG_DWORD /d 1 /f
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings" /v ProxyEnable /t REG_DWORD /d 1 /f
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings" /v ProxyServer /t REG_SZ /d "http=myproxy;https=sproxy:88" /f
        reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings" /v ProxyOverride /t REG_SZ /d "*.foo.com;<local>" /f

    - name: Check IE proxy settings
      shell: bash
      run: |
        out=$(./proxycli config auto_discover)
        echo "Auto discovery: $out"
        if echo $out | grep -q 'enabled'; then
          echo "Auto discovery set successfully"
        else
          echo "Auto discovery set failed"
          exit 1
        fi
        out=$(./proxycli config proxy http)
        echo "Proxy (http): $out"
        if echo $out | grep -q 'myproxy'; then
          echo "Proxy (http) set successfully"
        else
          echo "Proxy (http) set failed"
          exit 1
        fi
        out=$(./proxycli config proxy https)
        echo "Proxy (https): $out"
        if echo $out | grep -q 'sproxy:88'; then
          echo "Proxy (https) set successfully"
        else
          echo "Proxy (https) set failed"
          exit 1
        fi
        out=$(./proxycli config bypass_list)
        echo "Proxy bypass: $out"
        if echo $out | grep -q '*.foo.com'; then
          echo "Proxy bypass set successfully"
        else
          echo "Proxy bypass set failed"
          exit 1
        fi
      working-directory: build/test/Release